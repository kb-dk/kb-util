# Test YAML
test:
  listofmaps:
    - fooA1: barA1
      fooA2: barA2
    - fooB: barB

# Nested map structure
# Very common way of stating strucctures in YAML
conditionalpropermap:
  bucket1:
    foo: bar
    # Note: No default defined
  bucket2:
    foo: zoo
    default: false
  bucket3:
    foo: boom
    default: true
  bucket4:
    foo: baz

# List of maps containing submaps
# Not a clean way of writing YAML, but it happens
conditionalmaplist:
  - bucket1:
      foo: bar
      # Note: No default defined
  - bucket2:
      foo: zoo
      default: false
  - bucket3:
      foo: boom
      default: true
  - bucket4:
      foo: baz

# List of maps containing values
# A bit cleaner than conditionalmaplist, but still a strange design
conditionalflatmaplist:
  - bucket1:
    foo: bar
    # Note: No default defined
  - bucket2:
    foo: zoo
    default: false
  - bucket3:
    foo: boom
    default: true
  - bucket4:
    foo: baz

# List of maps containing values below, without map id as explicit key
# A common & sane YAML construction
conditionalanonymousmaplist:
  - name: bucket1
    foo: bar
    # Note: No default defined
  - name: bucket2
    foo: zoo
    default: false
  - name: bucket3
    foo: boom
    default: true
  - name: bucket4
    foo: baz

# For testing yaml.getSubMap
nested:
  inner:
    foosubst: ${path:conditionalpropermap.[default=true].foo}
