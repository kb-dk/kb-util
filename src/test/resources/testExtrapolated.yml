# Test YAML
test:
  somestring: ${user.home} Hello World
  someint: ${java.specification.version}
  somedouble: ${java.class.version}
  somebool: true
  fallback: ${nonexisting.property:-mydefault}
  envfallback: ${sys:NOT_DEFINED:-envdefault}
  nestedfallback: ${nonexisting:-${user.home:-dontreach}}

  # Unfortunately nested fallback does not work with prefix, so nestedfallbacksyssys results in "dontreach"
  nestedfallbacksyssys: ${sys:nonexisting:-${sys:user.home:-dontreach}}

  # Unfortunately nested fallback does not work with prefix, so env-resolving does not work for secondary lookup
  mixedfallbacksysenv: ${nonexisting:-${env:USERNAME:-dontreach}}

  # This works as the prefix-requiring environment lookup is first in the chain
  mixedfallbackenvsys: ${env:NONEXISTING:-${user.name:-dontreach}}

  nestedfallbackfail: ${nonexisting:-${also.nonexisting:-reach}}
  sysuser: ${sys:user.name}
  envuser: ${env:USERNAME}
  nonexpand: $${raw}
  nested:
    sublevel2string: ${user.name}
  arrayofstrings:
    - a
    - "${user.name}"
    - c
  arrayofints:
    - ${java.vm.specification.version}
    - 2
  emptyList: []
