/**
 * Test class generated by OpenAPI in the java-webapp-template project.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package dk.kb.util.webservice.stream;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.Objects;

/**
 * Test class from the java-webapp-template project.
 * 
 * BookDto
 */
@JsonPropertyOrder({
  BookDto.JSON_PROPERTY_ID,
  BookDto.JSON_PROPERTY_TITLE,
  BookDto.JSON_PROPERTY_PAGES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaCXFExtServerCodegen", date = "2022-06-24T12:52:17.834352580+02:00[Europe/Copenhagen]")
@XmlRootElement(name = "book")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "book")
public class BookDto {
  public static final String JSON_PROPERTY_ID = "id";
  @XmlAttribute(name = "id")
  private String id;

  public static final String JSON_PROPERTY_TITLE = "title";
  @XmlElement(name = "title")
  private String title;

  public static final String JSON_PROPERTY_PAGES = "pages";
  @XmlElement(name = "pages")
  private Integer pages;


  public BookDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Book ID
   * @return id
  **/
  @NotNull
  @ApiModelProperty(example = "book_bookid87", required = true, value = "Book ID")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(isAttribute = true, localName = "id")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public BookDto title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Book title
   * @return title
  **/
  @NotNull
  @ApiModelProperty(example = "Disappeared by the Storm", required = true, value = "Book title")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public BookDto pages(Integer pages) {
    
    this.pages = pages;
    return this;
  }

   /**
   * Get pages
   * @return pages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "43", value = "")
  @JsonProperty(JSON_PROPERTY_PAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "pages")

  public Integer getPages() {
    return pages;
  }


  public void setPages(Integer pages) {
    this.pages = pages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookDto book = (BookDto) o;
    return Objects.equals(this.id, book.id) &&
        Objects.equals(this.title, book.title) &&
        Objects.equals(this.pages, book.pages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, pages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

